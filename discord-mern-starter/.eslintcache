[{"D:\\react_decord\\discord-mern-starter\\src\\index.js":"1","D:\\react_decord\\discord-mern-starter\\src\\App.js":"2","D:\\react_decord\\discord-mern-starter\\src\\serviceWorker.js":"3","D:\\react_decord\\discord-mern-starter\\src\\app\\store.js":"4","D:\\react_decord\\discord-mern-starter\\src\\Sidebar.js":"5","D:\\react_decord\\discord-mern-starter\\src\\Login.js":"6","D:\\react_decord\\discord-mern-starter\\src\\firebase.js":"7","D:\\react_decord\\discord-mern-starter\\src\\Chat.js":"8","D:\\react_decord\\discord-mern-starter\\src\\features\\userSlice.js":"9","D:\\react_decord\\discord-mern-starter\\src\\features\\appSlice.js":"10","D:\\react_decord\\discord-mern-starter\\src\\SidebarChannel.js":"11","D:\\react_decord\\discord-mern-starter\\src\\Message.js":"12","D:\\react_decord\\discord-mern-starter\\src\\ChatHeader.js":"13","D:\\react_decord\\discord-mern-starter\\src\\axios.js":"14"},{"size":644,"mtime":1606985061965,"results":"15","hashOfConfig":"16"},{"size":1154,"mtime":1606985061949,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":1606985061965,"results":"18","hashOfConfig":"16"},{"size":254,"mtime":1606985061949,"results":"19","hashOfConfig":"16"},{"size":3442,"mtime":1607673525626,"results":"20","hashOfConfig":"16"},{"size":689,"mtime":1606985061949,"results":"21","hashOfConfig":"16"},{"size":531,"mtime":1607498281198,"results":"22","hashOfConfig":"16"},{"size":2672,"mtime":1607674659178,"results":"23","hashOfConfig":"16"},{"size":458,"mtime":1606985061965,"results":"24","hashOfConfig":"16"},{"size":618,"mtime":1606985061965,"results":"25","hashOfConfig":"16"},{"size":564,"mtime":1607603238867,"results":"26","hashOfConfig":"16"},{"size":662,"mtime":1607497429879,"results":"27","hashOfConfig":"16"},{"size":1252,"mtime":1606985061949,"results":"28","hashOfConfig":"16"},{"size":128,"mtime":1607410948487,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3ht43x",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\react_decord\\discord-mern-starter\\src\\index.js",[],["63","64"],"D:\\react_decord\\discord-mern-starter\\src\\App.js",["65"],"import React from 'react';\r\nimport './App.css';\r\nimport Sidebar from './Sidebar';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport Chat from './Chat';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Login from './Login';\r\nimport { useEffect } from 'react';\r\nimport { auth } from './firebase';\r\nimport { login, logout } from './features/userSlice'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(selectUser)\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n\r\n      console.log(authUser)\r\n\r\n      if (authUser) {\r\n        dispatch(login({\r\n          uid: authUser.uid,\r\n          photo: authUser.photoURL,\r\n          email: authUser.email,\r\n          displayName: authUser.displayName\r\n        }))\r\n      } else {\r\n        dispatch(logout())\r\n      }\r\n    })\r\n  }, [dispatch])\r\n\r\n  console.log(user)\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {user ? (\r\n        <>\r\n          <Sidebar />\r\n          <Chat />\r\n        </>\r\n\r\n      ) : (\r\n          <Login />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\react_decord\\discord-mern-starter\\src\\serviceWorker.js",[],"D:\\react_decord\\discord-mern-starter\\src\\app\\store.js",[],"D:\\react_decord\\discord-mern-starter\\src\\Sidebar.js",[],"D:\\react_decord\\discord-mern-starter\\src\\Login.js",[],"D:\\react_decord\\discord-mern-starter\\src\\firebase.js",["66"],"import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCKZDYX5Zh5FEniuxRyGvTiCRFoLxwN_qI\",\r\n    authDomain: \"discord-f0029.firebaseapp.com\",\r\n    projectId: \"discord-f0029\",\r\n    storageBucket: \"discord-f0029.appspot.com\",\r\n    messagingSenderId: \"252970041498\",\r\n    appId: \"1:252970041498:web:a3450e221214fe45fd5f23\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\n\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { auth, provider }\r\n","D:\\react_decord\\discord-mern-starter\\src\\Chat.js",["67"],"import React from 'react'\r\nimport './Chat.css'\r\nimport ChatHeader from './ChatHeader'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport CradGiftcardIcon from '@material-ui/icons/CardGiftcard'\r\nimport GifIcon from '@material-ui/icons/Gif'\r\nimport EmojiEmoticonsIcon from '@material-ui/icons/EmojiEmotions'\r\nimport Message from './Message'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/userSlice'\r\nimport { selectChannelId, selectChannelName } from './features/appSlice'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nconst Chat = () => {\r\n    const user = useSelector(selectUser)\r\n    const channelId = useSelector(selectChannelId)\r\n    const channelName = useSelector(selectChannelName)\r\n    const [input, setInput] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const getconversations=(channelId)=>{\r\n        if(channelId){\r\n            axios.get(`/get/conversation?id=${channelId}`).then((res)=>{\r\n                setMessages(res.data[0].conversation)\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getconversations(channelId)\r\n\r\n    }, [channelId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n\r\n        axios.post(`/new/message?id=${channelId}`,{\r\n            message:input,\r\n            timestamp:Date.now(),\r\n            user: user\r\n        })\r\n\r\n        setInput('')\r\n    }\r\n\r\n    return (\r\n        <div className='chat' >\r\n            <ChatHeader channelName={channelName} />\r\n\r\n            <div className=\"chat__messages\">\r\n                {messages.map((message) => {\r\n                    console.log(message)\r\n                })}\r\n                {messages.map(message => (\r\n                    <Message message={message.message} timestamp={message.timestamp} user={message.user} />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize='large' />\r\n                <form>\r\n                    <input type=\"text\" disabled={!channelId} value={input} onChange={(e) => setInput(e.target.value)} placeholder={`Message #${channelName}`} />\r\n                    <button className='chat__inputButton' onClick={sendMessage} disabled={!channelId} type='submit'>Send Message</button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputIcon\">\r\n                    <CradGiftcardIcon fontSize='large' />\r\n                    <GifIcon fontSize='large' />\r\n                    <EmojiEmoticonsIcon fontSize='large' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\react_decord\\discord-mern-starter\\src\\features\\userSlice.js",[],"D:\\react_decord\\discord-mern-starter\\src\\features\\appSlice.js",[],"D:\\react_decord\\discord-mern-starter\\src\\SidebarChannel.js",[],"D:\\react_decord\\discord-mern-starter\\src\\Message.js",[],["68","69"],"D:\\react_decord\\discord-mern-starter\\src\\ChatHeader.js",[],"D:\\react_decord\\discord-mern-starter\\src\\axios.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":12,"column":7,"nodeType":"76","messageId":"77","endLine":12,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":54,"column":41,"nodeType":"81","messageId":"82","endLine":54,"endColumn":43},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'ExpandMore' is defined but never used.","Identifier","unusedVar","'firebaseApp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["85"],["86"],"no-global-assign","no-unsafe-negation"]